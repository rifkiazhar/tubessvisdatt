# -*- coding: utf-8 -*-
"""tubes_1301184035.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/14JPD3KnhEtIc-y_GZ0PFO2EdpV2KI3E6

MUHAMMAD RIFKI AZHARI - 1301184035
"""

#Data handing
import pandas as pd
import numpy as np

#Bokeh libraries

from bokeh.io import curdoc
from bokeh.plotting import figure, show
from bokeh.models import HoverTool, ColumnDataSource, Select
from bokeh.models import CategoricalColorMapper
from bokeh.palettes import Spectral6
from bokeh.layouts import WidgetBox, row, column
from bokeh.models import Slider, Select
from bokeh.models.widgets import Tabs, Panel, CheckboxGroup
from bokeh.models import NumeralTickFormatter

dataset = pd.read_csv('covid_19_indonesia_time_series_all.csv') #https://www.kaggle.com/hendratno/covid19-indonesia
dataset.head()

#jumlah baris dan kolom dataset
dataset.shape

#memilih kolom yang ingin di gunakan
dataset = dataset [['Date', 'Location', 'New Cases', 'Total Cases', 'Total Deaths', 'Total Recovered']]

dataset['Date'] = pd.to_datetime(dataset['Date'])
dataset.head()

# Kasus untuk seluruh Indonesia
indonesia = dataset[dataset['Location'] == 'Indonesia']
indonesia['Island'] = 'Indonesia'
indonesia_case = ColumnDataSource(indonesia)

#membuat location agar tidak sama
region = dataset.Location.unique().tolist()

#List dari setiap kolom
column_list = list(dataset.columns)

def create_data(region,cases):
  x_list = []
  y_list = []
  colors = []
  labels = []

  for i, region in enumerate(region):
    df = datasett[datasett['Location'] == region].reset_index(drop= True)

    x = list(df['Date'])
    y = list(df[cases])

    x_list.append(list(x))
    y_list.append(list(y))

    colors.append(Spectral6)
    labels.append(region)

    source = ColumnDataSource(dataset= {'x':x_list, 'y':y_list, 'color':colors, 'label':labels})

    return source

#membuat figure plot
fig = figure(x_axis_type='datetime',
               plot_width=900, plot_height=450,
               title = 'Visualization Covid19 in Indonesian',
               x_axis_label= 'Date', y_axis_label= 'Total Kasus')


fig.yaxis.formatter = NumeralTickFormatter(format="00") 

fig.line('Date', 'Total Cases',
                  color='#CE1141', legend_label='Total Kasus di Indonesia',
                  source=indonesia_case)

fig.legend.location = 'top_left'

#definisikan tooltips
tooltips= [
                     ('Date', '@date{%F}'),
                     ('New Cases', '@new cases'),
                     ('Total Cases', '@total cases'),
                     ('Total Deaths', '@total_deaths'),
                     ('Total Recovered', '@total_recovered')
                    ]

fig.add_tools(HoverTool(tooltips=tooltips, formatters= {'@date' : 'datetime'}))

#method callback
def update_region(attr, old, new):
  region_plot = [region_selection.labels[i] for i in region_selection.active]

  new_source = create_data(region_plot,cases.value)
  source.dataset.update(new_source.dataset)

#method callback
def update_fitur(attr, old, new):
   region_plot = [region_selection.labels[i] for i in region_selection.active]
  
   cases = cases_select.value

   new_source = create_data(region_plot, cases)

   source.dataset.update(new_source.dataset)

region_selection = CheckboxGroup(labels=region)
region_selection.on_change('active', update_region)

cases_select = Select(options = column_list[2:], value='Total Cases', title='Cases')
cases_select.on_change('value',update_fitur)


layout=row(WidgetBox(region_selection,cases_select))
curdoc().add_root(layout)
